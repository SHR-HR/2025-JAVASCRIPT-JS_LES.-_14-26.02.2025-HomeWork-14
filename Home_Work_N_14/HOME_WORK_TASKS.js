//=========================================================================================================
// –î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ.
//=========================================================================================================
// –ö—É—Ä—Å:    –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –Ω–∞ JavaScript. 
// –î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞:  –û—Å–Ω–æ–≤—ã  JavaScript. 
//=========================================================================================================
// –î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ ‚Ññ14 : –†–∞–±–æ—Ç–∞ —Å–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º–∏ –æ –±—ä–µ–∫—Ç–∞–º–∏ JavaScript.
//=========================================================================================================
// –†–µ—à–∏—Ç–µ –¥–∞–Ω–Ω—É—é –∑–∞–¥–∞—á—É, –∏—Å–ø–æ–ª—å–∑—É—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫.
//=========================================================================================================
// 1. –°–æ–∑–¥–∞—Ç—å –æ–±—ä–µ–∫—Ç, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å (–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å, –º–æ–¥–µ–ª—å, –≥–æ–¥ –≤—ã–ø—É—Å–∫–∞, —Å—Ä–µ–¥–Ω—è—è —Å–∫–æ—Ä–æ—Å—Ç—å),
// –∏ —Å–ª–µ–¥—É—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —ç—Ç–∏–º –æ–±—ä–µ–∫—Ç–æ–º.
// ‚Ä¢ –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –Ω–∞ —ç–∫—Ä–∞–Ω –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ–º–æ–±–∏–ª–µ.
// ‚Ä¢ –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –ø—Ä–µ–æ–¥–æ–ª–µ–Ω–∏—è –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è.
// --------------------------------------------------------------------------------------------------------
// 2. –°–æ–∑–¥–∞—Ç—å –æ–±—ä–µ–∫—Ç, —Ö—Ä–∞–Ω—è—â–∏–π –≤ —Å–µ–±–µ –æ—Ç–¥–µ–ª—å–Ω–æ —á–∏—Å–ª–∏—Ç–µ–ª—å –∏ –∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å –¥—Ä–æ–±–∏,
// –∏ —Å–ª–µ–¥—É—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —ç—Ç–∏–º –æ–±—ä–µ–∫—Ç–æ–º.
// ‚Ä¢ –§—É–Ω–∫—Ü–∏—è —Å–ª–æ–∂–µ–Ω–∏—è 2-—Ö –æ–±—ä–µ–∫—Ç–æ–≤-–¥—Ä–æ–±–µ–π.
// ‚Ä¢ –§—É–Ω–∫—Ü–∏—è –≤—ã—á–∏—Ç–∞–Ω–∏—è 2-—Ö –æ–±—ä–µ–∫—Ç–æ–≤-–¥—Ä–æ–±–µ–π.
// ‚Ä¢ –§—É–Ω–∫—Ü–∏—è —É–º–Ω–æ–∂–µ–Ω–∏—è 2-—Ö –æ–±—ä–µ–∫—Ç–æ–≤-–¥—Ä–æ–±–µ–π.
// ‚Ä¢ –§—É–Ω–∫—Ü–∏—è –¥–µ–ª–µ–Ω–∏—è 2-—Ö –æ–±—ä–µ–∫—Ç–æ–≤-–¥—Ä–æ–±–µ–π.
// ‚Ä¢ –§—É–Ω–∫—Ü–∏—è —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞-–¥—Ä–æ–±–∏.
//=========================================================================================================
//=========================================================================================================

// –ó–∞–¥–∞–Ω–∏–µ 1: –û–±—ä–µ–∫—Ç "–ê–≤—Ç–æ–º–æ–±–∏–ª—å"
// --------------------------------------------------------------------------------------------------------
// –°–æ–∑–¥–∞–¥–∏–º –æ–±—ä–µ–∫—Ç car, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –æ–± –∞–≤—Ç–æ–º–æ–±–∏–ª–µ –∏ –¥–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏:
// –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ–º–æ–±–∏–ª–µ.
// –†–∞—Å—á—ë—Ç –≤—Ä–µ–º–µ–Ω–∏, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –¥–ª—è –ø—Ä–µ–æ–¥–æ–ª–µ–Ω–∏—è –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è (—Å —É—á—ë—Ç–æ–º –æ—Ç–¥—ã—Ö–∞ –∫–∞–∂–¥—ã–µ 4 —á–∞—Å–∞).

// =========================================================================================================
// –ó–∞–¥–∞–Ω–∏–µ 1: –û–±—ä–µ–∫—Ç "–ê–≤—Ç–æ–º–æ–±–∏–ª—å"
// =========================================================================================================

const car = {
        manufacturer: "Toyota",
        model: "Camry",
        year: 2021,
        speed: 80, // –∫–º/—á (—Å—Ä–µ–¥–Ω—è—è —Å–∫–æ—Ä–æ—Å—Ç—å)
    
        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–≤—Ç–æ–º–æ–±–∏–ª–µ
        showInfo() {
            return `üöó –ê–≤—Ç–æ–º–æ–±–∏–ª—å: ${this.manufacturer} ${this.model} <br>
                    üìÖ –ì–æ–¥ –≤—ã–ø—É—Å–∫–∞: ${this.year} <br>
                    ‚è© –°—Ä–µ–¥–Ω—è—è —Å–∫–æ—Ä–æ—Å—Ç—å: ${this.speed} –∫–º/—á`;
        },
    
        // –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á—ë—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –ø—Ä–µ–æ–¥–æ–ª–µ–Ω–∏—è —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è
        calculateTime(distance) {
            let travelTime = distance / this.speed; // –í—Ä–µ–º—è –≤ —á–∞—Å–∞—Ö
            let restTime = Math.floor(travelTime / 4); // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ—Ä—ã–≤–æ–≤
            let totalTime = travelTime + restTime; // –û–±—â–µ–µ –≤—Ä–µ–º—è —Å —É—á—ë—Ç–æ–º –æ—Ç–¥—ã—Ö–∞
            return `‚è≥ –í—Ä–µ–º—è –≤ –ø—É—Ç–∏: ~${totalTime.toFixed(1)} —á–∞—Å–æ–≤ (–≤–∫–ª—é—á–∞—è –æ—Ç–¥—ã—Ö)`;
        }
    };
    
    // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å DOM
    function displayCarInfo() {
        document.getElementById("carInfo").innerHTML = car.showInfo();
    }
    
    function calculateTravelTime() {
        let distance = document.getElementById("distance").value;
        if (!distance || distance <= 0) {
            document.getElementById("travelTime").innerHTML = "‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ!";
            return;
        }
        document.getElementById("travelTime").innerHTML = car.calculateTime(distance);
    }    

//=========================================================================================================

// –ó–∞–¥–∞–Ω–∏–µ 2: –û–±—ä–µ–∫—Ç "–î—Ä–æ–±—å" –∏ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –Ω–∏–º
// --------------------------------------------------------------------------------------------------------
// –°–æ–∑–¥–∞–¥–∏–º –æ–±—ä–µ–∫—Ç Fraction, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—Ç—å –¥—Ä–æ–±—å –∏ –≤–∫–ª—é—á–∞—Ç—å –º–µ—Ç–æ–¥—ã:
    
// —Å–ª–æ–∂–µ–Ω–∏–µ (add)
// –≤—ã—á–∏—Ç–∞–Ω–∏–µ (subtract)
// —É–º–Ω–æ–∂–µ–Ω–∏–µ (multiply)
// –¥–µ–ª–µ–Ω–∏–µ (divide)
// —Å–æ–∫—Ä–∞—â–µ–Ω–∏–µ –¥—Ä–æ–±–∏ (simplify)

// =========================================================================================================
// –ó–∞–¥–∞–Ω–∏–µ 2: –û–±—ä–µ–∫—Ç "–î—Ä–æ–±—å" –∏ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
// =========================================================================================================

const gcd = (a, b) => (b === 0 ? a : gcd(b, a % b)); // –ù–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –ù–û–î

class Fraction {
    constructor(numerator, denominator) {
        if (denominator === 0) {
            throw new Error("‚ùå –û—à–∏–±–∫–∞: –∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å 0!");
        }
        this.numerator = numerator;
        this.denominator = denominator;
    }

    add(fraction) {
        let newNumerator = this.numerator * fraction.denominator + fraction.numerator * this.denominator;
        let newDenominator = this.denominator * fraction.denominator;
        return new Fraction(newNumerator, newDenominator).simplify();
    }

    subtract(fraction) {
        let newNumerator = this.numerator * fraction.denominator - fraction.numerator * this.denominator;
        let newDenominator = this.denominator * fraction.denominator;
        return new Fraction(newNumerator, newDenominator).simplify();
    }

    multiply(fraction) {
        let newNumerator = this.numerator * fraction.numerator;
        let newDenominator = this.denominator * fraction.denominator;
        return new Fraction(newNumerator, newDenominator).simplify();
    }

    divide(fraction) {
        if (fraction.numerator === 0) {
            throw new Error("‚ùå –û—à–∏–±–∫–∞: –¥–µ–ª–µ–Ω–∏–µ –Ω–∞ 0 –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ!");
        }
        let newNumerator = this.numerator * fraction.denominator;
        let newDenominator = this.denominator * fraction.numerator;
        return new Fraction(newNumerator, newDenominator).simplify();
    }

    simplify() {
        let divisor = gcd(this.numerator, this.denominator);
        return new Fraction(this.numerator / divisor, this.denominator / divisor);
    }

    toString() {
        return `${this.numerator}/${this.denominator}`;
    }
}

function performOperation(operation) {
    let num1 = parseInt(document.getElementById("num1").value);
    let den1 = parseInt(document.getElementById("den1").value);
    let num2 = parseInt(document.getElementById("num2").value);
    let den2 = parseInt(document.getElementById("den2").value);

    let fraction1 = new Fraction(num1, den1);
    let fraction2 = new Fraction(num2, den2);
    let result = fraction1[operation](fraction2);

    document.getElementById("fractionResult").innerHTML = `üìå –†–µ–∑—É–ª—å—Ç–∞—Ç: ${result.toString()}`;
}

function simplifyFraction() {
    let num1 = parseInt(document.getElementById("num1").value);
    let den1 = parseInt(document.getElementById("den1").value);
    let fraction = new Fraction(num1, den1).simplify();
    document.getElementById("fractionResult").innerHTML = `üîΩ –°–æ–∫—Ä–∞—â—ë–Ω–Ω–∞—è –¥—Ä–æ–±—å: ${fraction.toString()}`;
}

//=========================================================================================================



